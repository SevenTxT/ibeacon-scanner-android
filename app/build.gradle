apply plugin: 'com.android.application'
apply from: '../jacoco.gradle'

if (System.env.TRAVIS == 'true') {
    allprojects {
        tasks.withType(GroovyCompile) {
            groovyOptions.fork = false
        }
        tasks.withType(Test) {
            // containers (currently) have 2 dedicated cores and 4GB of memory
            maxParallelForks = 2
            minHeapSize = '128m'
        }
    }
}

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        applicationId appApplicationId
        minSdkVersion 18
        targetSdkVersion 27
        versionCode 2
        versionName "2"
        testInstrumentationRunner appTestRunner
    }

    buildTypes {
        debug {
            testCoverageEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        if (System.env.TRAVIS == 'true') {
            preDexLibraries = false
        }
    }
}

dependencies {
    implementation project(':ibeaconscanner') // library to scan for iBeacons
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'io.reactivex:rxjava:1.2.0' // rxjava
    implementation 'com.tbruyelle.rxpermissions:rxpermissions:0.7.0@aar' // library to handle location permission
    implementation 'com.facebook.stetho:stetho:1.4.1' // stetho to easily see our database
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5' // leak canary to detect leaks
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5' // leak canary to detect leaks
    implementation 'com.jakewharton:butterknife:8.4.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'

    androidTestImplementation 'com.android.support:support-annotations:27.1.1'
    androidTestImplementation('com.android.support.test:runner:0.5') {
        exclude module: 'support-annotations'
    }
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.0' // for mockito
    androidTestImplementation 'com.google.dexmaker:dexmaker:1.0' // for mockito
    androidTestImplementation 'org.mockito:mockito-core:1.10.17' // for mockito

    testImplementation 'junit:junit:4.12'
}

sonarqube {
    properties {
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.jacoco.reportPath", "build/jacoco/testDebugUnitTest.exec" // junit coverage report
        property "sonar.junit.reportsPath", "build/combined/" // path to UI + junit reports
        property "sonar.android.lint.report", "build/outputs/lint-results-debug.xml" // path to lint report
    }
}
